# Generated by Django 4.2.7 on 2025-06-19 11:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('leaks', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('admin', 'Administrator'), ('analyst', 'Security Analyst'), ('manager', 'Manager'), ('viewer', 'Viewer')], default='viewer', max_length=20, verbose_name='Role')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Phone')),
                ('telegram_id', models.CharField(blank=True, max_length=50, verbose_name='Telegram ID')),
                ('timezone', models.CharField(default='UTC', max_length=50, verbose_name='Timezone')),
                ('language', models.CharField(choices=[('en', 'English'), ('ru', 'Русский')], default='en', max_length=10, verbose_name='Language')),
                ('email_notifications', models.BooleanField(default=True, verbose_name='Email notifications')),
                ('telegram_notifications', models.BooleanField(default=False, verbose_name='Telegram notifications')),
                ('notification_frequency', models.CharField(choices=[('immediate', 'Immediate'), ('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly')], default='daily', max_length=20, verbose_name='Notification frequency')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='Last login IP')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='leaks.company', verbose_name='Company')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
                'db_table': 'user_profiles',
                'ordering': ['user__username'],
            },
        ),
        migrations.CreateModel(
            name='APIKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('key', models.CharField(max_length=64, unique=True, verbose_name='Key')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('rate_limit', models.PositiveIntegerField(default=1000, help_text='Requests per hour', verbose_name='Rate limit')),
                ('allowed_ips', models.JSONField(blank=True, default=list, help_text='List of allowed IP addresses', verbose_name='Allowed IPs')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('last_used', models.DateTimeField(blank=True, null=True, verbose_name='Last used')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Expires at')),
                ('permissions', models.ManyToManyField(blank=True, to='auth.permission', verbose_name='Permissions')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_keys', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'API Key',
                'verbose_name_plural': 'API Keys',
                'db_table': 'api_keys',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(max_length=40, unique=True, verbose_name='Session key')),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP address')),
                ('user_agent', models.TextField(blank=True, verbose_name='User agent')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('last_activity', models.DateTimeField(auto_now=True, verbose_name='Last activity')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Session',
                'verbose_name_plural': 'User Sessions',
                'db_table': 'user_sessions',
                'ordering': ['-last_activity'],
                'indexes': [models.Index(fields=['user'], name='user_sessio_user_id_eb20aa_idx'), models.Index(fields=['session_key'], name='user_sessio_session_cc84b9_idx'), models.Index(fields=['last_activity'], name='user_sessio_last_ac_7cb421_idx')],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('login', 'Login'), ('logout', 'Logout'), ('create', 'Create'), ('update', 'Update'), ('delete', 'Delete'), ('view', 'View'), ('export', 'Export')], max_length=20, verbose_name='Action')),
                ('resource_type', models.CharField(help_text='Type of resource (e.g., leak, comment, report)', max_length=50, verbose_name='Resource type')),
                ('resource_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='Resource ID')),
                ('details', models.JSONField(blank=True, default=dict, verbose_name='Details')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP address')),
                ('user_agent', models.TextField(blank=True, verbose_name='User agent')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Timestamp')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Audit Log',
                'verbose_name_plural': 'Audit Logs',
                'db_table': 'audit_logs',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user'], name='audit_logs_user_id_73c422_idx'), models.Index(fields=['action'], name='audit_logs_action_31f574_idx'), models.Index(fields=['resource_type'], name='audit_logs_resourc_e11e1b_idx'), models.Index(fields=['timestamp'], name='audit_logs_timesta_423be6_idx')],
            },
        ),
    ]
